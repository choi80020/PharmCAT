buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.2.0'
  }
}
plugins {
  id 'java'
  id 'application'
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.8.2'
  id 'com.jfrog.bintray' version '1.8.4'
  id 'maven-publish'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id 'signing'
}
apply plugin: 'biz.aQute.bnd.builder'


def getVersionName() {
  def errOut = new ByteArrayOutputStream()
  try {
    def stdOut = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--tags'
      standardOutput = stdOut
      errorOutput = errOut
    }
    // strip of leading "v"
    return stdOut.toString().trim().substring(1)
  } catch (ignore) {
    logger.info('Error running git describe (' + errOut.toString().trim() + '), defaulting to 0.0.0')
    return '0.0.0'
  }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
project.group = 'org.pharmgkb'
project.version = getVersionName()
archivesBaseName = "pharmcat"
mainClassName = "org.pharmgkb.pharmcat.PharmCAT"

ext {
  moduleName = 'org.pharmgkb.pharmcat'
  description = 'The Pharmacogenomic Clinical Annotation Tool'
  url = 'https://github.com/PharmGKB/PharmCAT.git'
  scm = 'scm:git@github.com:PharmGKB/PharmCAT.git'
  orgName = 'PharmGKB'
  orgUrl = 'https://www.pharmgkb.org'
  // grab properties from environment for Travis CI
  gpgPwd = project.hasProperty('signing.password') ? project.getProperty('signing.password') : System.getenv('SIGNING_PASSWORD')
  sonatypeUser = project.hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME')
  sonatypePwd  = project.hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')
  bintrayUser = project.hasProperty('bintrayUsername') ? bintrayUsername : System.getenv('BINTRAY_USERNAME')
  bintrayKey  = project.hasProperty('bintrayApiKey')   ? bintrayApiKey   : System.getenv('BINTRAY_API_KEY')
}


repositories {
  jcenter()
}

dependencies {
  compile (
      [group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'],
      [group: 'commons-cli', name: 'commons-cli', version: '1.4'],
      [group: 'commons-io', name: 'commons-io', version: '2.6'],
      [group: 'com.google.api-client', name: 'google-api-client', version: '1.23.0'],
      [group: 'com.google.apis', name: 'google-api-services-drive', version: 'v3-rev108-1.23.0'],
      [group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'],
      [group: 'com.google.code.gson', name: 'gson', version: '2.8.5'],
      [group: 'com.google.guava', name: 'guava', version: '24.0-jre'],
      [group: 'com.google.gdata', name: 'core', version: '1.47.1'],
      [group: 'com.google.http-client', name: 'google-http-client-gson', version: '1.22.0'],
      [group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'],
      [group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'],
      [group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'],
      [group: 'org.apache.commons', name: 'commons-text', version: '1.6'],
      [group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'],
      [group: 'org.pharmgkb', name: 'pgkb-common', version: '0.2.2'],
      [group: 'org.pharmgkb', name: 'pgkb-common-io', version: '0.1.5'],
      [group: 'org.pharmgkb', name: 'vcf-parser', version: '0.2.0'],
      [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'],
      [group: 'com.github.jknack', name: 'handlebars', version: '4.0.6'],
  )

  testCompile(
      [group: 'junit', name: 'junit', version: '4.12']
  )
}


test {
  testLogging {
    // set options for log level LIFECYCLE
    events 'failed', 'standard_error'
    exceptionFormat 'full'
  }
}


jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}


jar {
  inputs.property('moduleName', project.ext.moduleName)
  manifest {
    attributes 'Automatic-Module-Name': project.ext.moduleName
    attributes 'Bundle-SymbolicName': project.ext.moduleName
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': project.version
    attributes 'Main-Class': mainClassName
  }
}

shadowJar {
  manifest {
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': project.version
  }
}

tasks.withType(Javadoc) {
  // disable the crazy super-strict doclint tool in Java 8
  options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task updateData(type: JavaExec, dependsOn: 'classes') {
  main = 'org.pharmgkb.pharmcat.util.DataManager'
  classpath = sourceSets.main.runtimeClasspath
  def argList = ['-a', file('src/main/resources/org/pharmgkb/pharmcat/definition/alleles'),
                 '-m', file('src/main/resources/org/pharmgkb/pharmcat/reporter'),
                 '-g', file('src/main/resources/org/pharmgkb/pharmcat/reporter/guidelines')]
  args argList
}

task extractPositions(type: JavaExec, dependsOn: 'classes') {
  main = 'org.pharmgkb.pharmcat.definition.ExtractPositions'
  classpath = sourceSets.main.runtimeClasspath
  def argList = ['-o', file('build/pharmcat.positions.vcf')]
  args argList
}

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}


signing {
  sign jar
  sign javadocJar
  sign sourcesJar
}


bintray {
  user = project.ext.bintrayUser
  key = project.ext.bintrayKey
  publications = [ 'PgkbPublication' ]
  dryRun = false
  publish = true

  pkg {
    repo = 'maven'
    name = project.name
    desc = project.ext.description
    userOrg = 'pharmgkb'
    licenses = [ 'MPL-2.0' ]
    issueTrackerUrl = project.ext.url + '/issues'
    vcsUrl = project.ext.url
    githubRepo = 'PharmGKB/PharmCAT'

    version {
      name = project.version
      vcsTag = 'v' + project.version
      gpg {
        sign = true
        passphrase = project.ext.gpgPwd
      }
      mavenCentralSync {
        sync = true
        user = project.ext.sonatypeUser
        password = project.ext.sonatypePwd
        close = '1'
      }
    }
  }
}

publishing {
  publications {
    PgkbPublication(MavenPublication) {
      from components.java
      artifact javadocJar
      artifact sourcesJar

      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          name project.name
          packaging 'jar'
          description project.ext.description
          url project.ext.url
          scm {
            url project.ext.url
            connection project.ext.scm
            developerConnection project.ext.scm
          }
          licenses {
            license {
              name 'MPL 2.0'
              url 'http://mozilla.org/MPL/2.0/'
              distribution 'repo'
            }
          }
          organization {
            name project.ext.orgName
            url project.ext.orgUrl
          }
          developers {
            developer {
              id 'markwoon'
              name 'Mark Woon'
            }
            developer {
              id 'whaleyr'
              name 'Ryan Whaley'
            }
          }
        }
      }
    }
    shadow(MavenPublication) { publication ->
      from project.shadow.component(publication)
      artifact javadocJar
      artifact sourcesJar

      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          name project.name
          packaging 'jar'
          description project.ext.description
          url project.ext.url
          scm {
            url project.ext.url
            connection project.ext.scm
            developerConnection project.ext.scm
          }
          licenses {
            license {
              name 'MPL 2.0'
              url 'http://mozilla.org/MPL/2.0/'
              distribution 'repo'
            }
          }
          organization {
            name project.ext.orgName
            url project.ext.orgUrl
          }
          developers {
            developer {
              id 'markwoon'
              name 'Mark Woon'
            }
            developer {
              id 'whaleyr'
              name 'Ryan Whaley'
            }
          }
        }
      }
    }
  }
}
